# Define os passos que o Google Cloud Build executará para o deploy automático.
# Versão: 1.1
steps:
  # Passo 1: Construir a imagem do contêiner.
  # Utiliza o Dockerfile otimizado na raiz do projeto.
  # A imagem é marcada com o ID único do commit ($COMMIT_SHA) para garantir o versionamento.
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/harmonia-repo/harmonia-api:$COMMIT_SHA', '.']
    timeout: '1200s' # Timeout de 20 minutos para a construção.

  # Passo 2: Enviar a imagem construída para o Artifact Registry.
  # O Artifact Registry é o repositório seguro do GCP para guardar as imagens.
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/harmonia-repo/harmonia-api:$COMMIT_SHA']

  # Passo 3: Fazer o deploy da nova imagem no Google Cloud Run.
  # Este passo atualiza o serviço existente com a nova versão da imagem.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'harmonia-api' # Nome do seu serviço no Cloud Run.
      - '--image'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/harmonia-repo/harmonia-api:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated' # Permite acesso público (ideal para a API do protótipo).
      # Anexa a URL do banco de dados a partir do Secret Manager de forma segura.
      - '--set-secrets=DATABASE_URL=harmonia-db-url:latest'

# Lista as imagens que serão criadas para referência nos logs do build.
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/harmonia-repo/harmonia-api:$COMMIT_SHA'

# Opções de configuração para o build.
options:
  logging: CLOUD_LOGGING_ONLY # Envia os logs apenas para o Cloud Logging.

